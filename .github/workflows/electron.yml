name: Build electron app

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build-electron-app:
    runs-on: ${{ matrix.os }}
    env:
      # GitHub token, automatically provided to the action
      # (No need to define this secret in the repo settings)
      GH_TOKEN: ${{ secrets.github_token }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js and PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: Install dependencies
        run: pnpm install

      - name: Download certificate file
        run: |
          echo $APPLE_DEVELOPER_ID_FILE | base64 --decode >> developer-id.privatekey.p12
        if: matrix.os == 'macos-latest'
        shell: bash
        env:
          APPLE_DEVELOPER_ID_FILE: ${{secrets.APPLE_DEVELOPER_ID_FILE}}

      - name: Build for production
        run: pnpm build:electron
        env:
          NUXT_PUBLIC_APPLICATION_INSIGHTS: ${{ vars.NUXT_PUBLIC_APPLICATION_INSIGHTS }}

      - name: Building the Electron app for Mac
        run: pnpm package:electron
        if: matrix.os == 'macos-latest'
        env:
          CSC_LINK: developer-id.privatekey.p12
          CSC_KEY_PASSWORD: ${{secrets.APPLE_DEVELOPER_ID_PASSWORD}}
          CSC_FOR_PULL_REQUEST: "true"
          APPLE_APP_SPECIFIC_PASSWORD: ${{secrets.APPLE_APP_SPECIFIC_PASSWORD}}
          APPLE_ID: ${{secrets.APPLE_ID}}
          APPLE_ID_PASSWORD: ${{secrets.APPLE_ID_PASSWORD}}
          APPLE_TEAM_ID: KJ6LCYQ3A8

      - name: Building the Electron app for Windows or Linux
        run: pnpm package:electron
        if: matrix.os != 'macos-latest'

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: |
            dist-app/BMM*

      - name: Archive Debian packages
        uses: actions/upload-artifact@v3
        if: matrix.os == 'ubuntu-latest'
        with:
          name: app
          path: |
            dist-app/bmm-web*.deb
